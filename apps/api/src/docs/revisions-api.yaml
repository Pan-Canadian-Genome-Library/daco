# Copyright (c) 2025 The Ontario Institute for Cancer Research. All rights reserved
#
# This program and the accompanying materials are made available under the terms of
# the GNU Affero General Public License v3.0. You should have received a copy of the
# GNU Affero General Public License along with this program.
#  If not, see <http://www.gnu.org/licenses/>.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
# SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
# TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER
# IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

paths:
  /applications/{applicationId}/revisions:
    get:
      tags:
        - Revisions
      summary: Get all revisions for a specific application
      description: Fetches all revisions associated with a given application ID.
      parameters:
        - in: path
          name: applicationId
          schema:
            type: integer
          required: true
          description: The ID of the application to fetch revisions for.
      responses:
        '200':
          description: Revisions fetched successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RevisionDetails'
        '400':
          description: Invalid request - applicationId is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ClientErrors'
        '404':
          description: No revisions found for the given applicationId.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ClientErrors'
        '500':
          description: Internal server error while fetching revisions.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ServerErrors'

  /applications/dac/{applicationId}/request-revisions:
    post:
      tags:
        - Revisions
      summary: 'Request revisions for an application'
      description: 'Allows a DAC to request revisions for an application, including approval status and comments on various sections.'
      parameters:
        - in: path
          name: applicationId
          schema:
            type: integer
          required: true
          description: The ID of the application to close.
      requestBody:
        description: Request body containing revision request details.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/requests/RequestRevisions'
      responses:
        '200':
          description: 'Revisions request successfully processed'
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: 'Indicates if the revision request was successful.'
                  updatedApplication:
                    allOf:
                      - description: 'Details of the updated application after revisions.'
                      - $ref: '#/components/responses/ApplicationResponse'
        '400':
          description: 'Error in requesting revisions. Invalid input, missing required fields.'
        '500':
          description: 'Error in requesting revisions'

  /applications/rep/{applicationId}/request-revisions:
    post:
      tags:
        - Revisions
      summary: 'Request revisions for an application'
      description: 'Allows a rep to request revisions for an application, including approval status and comments on various sections.'
      parameters:
        - in: path
          name: applicationId
          schema:
            type: integer
          required: true
          description: The ID of the application to close.
      requestBody:
        description: Request body containing revision request details.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/requests/RequestRevisions'
      responses:
        '200':
          description: 'Revisions request successfully processed'
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: 'Indicates if the revision request was successful.'
                  updatedApplication:
                    allOf:
                      - description: 'Details of the updated application after revisions.'
                      - $ref: '#/components/responses/ApplicationResponse'
        '400':
          description: 'Error in requesting revisions. Invalid input, missing required fields.'
        '500':
          description: 'Error in requesting revisions'

  /applications/{applicationId}/submit-revisions:
    post:
      tags:
        - Revisions
      summary: Submit revisions for an application
      description: Allows applicants to submit requested revisions for DAC or Rep review.
      parameters:
        - name: applicationId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '500':
          description: 'Cannot reject application by ID'
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ServerErrors'
        '400':
          description: 'Error submitting revision. Request validation failed.'
          content:
            application/json:
              schema:
                $ref: '#/components/responses/RequestValidationError'
        '404':
          description: 'Invalid request or submit revision not allowed'
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ClientErrors'
        '200':
          description: 'Application successfully submitted for revision'
          content:
            application/json:
              schema:
                $ref: '#/components/responses/BasicApplicationResponse'
