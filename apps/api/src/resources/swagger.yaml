# Copyright (c) 2024 The Ontario Institute for Cancer Research. All rights reserved
#
# This program and the accompanying materials are made available under the terms of
# the GNU Affero General Public License v3.0. You should have received a copy of the
# GNU Affero General Public License along with this program.
#  If not, see <http://www.gnu.org/licenses/>.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
# SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
# TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER
# IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

openapi: 3.0.0
info:
  title: PCGL DACO API
  version: 1.0.0
paths:
  /health:
    get:
      tags:
        - Health
      summary: get status of app and various app components
      responses:
        '500':
          description: 'app is not fully healthy'
        '200':
          description: 'all components reporting healthy status'
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: string
                  health:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                        statusText:
                          type: string

  /applications:
    get:
      tags:
        - Applications
      summary: Get All Users Applications
      parameters:
        - in: query
          name: userId
          schema:
            type: string
          description: Retrieve application items belonging to userId
          required: true
        - in: query
          name: state
          schema:
            type: string
          description: |
            Retrieve specific application items in a certain State. This may be an array to get multiple application types. The states that may be requested, may be the following enum values: `["DRAFT", "INSTITUTIONAL_REP_REVIEW"," DAC_REVIEW", "DAC_REVISIONS_REQUESTED", "INSTITUTIONAL_REP_REVISION_REQUESTED", "REJECTED", "APPROVED", "CLOSED", "REVOKED"]`.
            <br/>
            <br/>
            **For Example:** `["APPROVED", "REJECTED"]` to get both approved and rejected applications.
            <br/>
            <br/>
            *Note:* These values *are* case sensitive.
        - in: query
          name: sort
          schema:
            type: string
          description: |
            Sort application items. Sorting application items takes in a JSON representation of an array and object combination.  This contains the column you'd like to sort by (id, user_id, state, created_at, approved_at, expires_at) and the direction (asc, desc).
            <br/>
            <br/>
            **For Example:** `[{"direction":"desc","column":"id"}]`. 
            <br/>
            <br/>
            *Note:* you may sort by multiple columns, just keep adding objects into the array.
        - in: query
          name: page
          schema:
            type: number
            minimum: 0
          description: Retrieve specific page of application items. All page counts start from zero (0) and must be a positive number. If none is provided, the default is 0.
        - in: query
          name: pageSize
          schema:
            type: number
            minimum: 0
          description: Max number of application items per page. Must be a positive number. If the property isn't provided, the default is 20.
      responses:
        '500':
          description: 'Cannot return applications list'
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ServerErrors'
        '400':
          description: 'Occurs when no User ID is provided, an error has occurred while processing JSON provided for the state/sort values, or page and/or page size are negative values.'
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ClientErrors'
        '200':
          description: 'Applications retrieved'
          content:
            application/json:
              schema:
                type: object
                properties:
                  applications:
                    type: array
                    items:
                      $ref: '#/components/schemas/ApplicationWithApplicantInfo'
                  pagingMetadata:
                    type: object
                    $ref: '#/components/schemas/PagingMetadata'

  /applications/{applicationId}:
    get:
      tags:
        - Applications
      summary: Gets a application for a specified application ID.
      parameters:
        - in: path
          name: applicationId
          schema:
            type: string
          description: Retrieve a specific application with the specified application ID.
          required: true
      responses:
        '500':
          description: 'Cannot retrieve application by ID'
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ServerErrors'
        '404':
          description: 'Error retrieving application by ID - Application not found.'
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ClientErrors'
        '200':
          description: 'Application retrieved'
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ApplicationResponse'

  /applications/metadata/counts:
    get:
      tags:
        - Applications
      summary: Gets the total number of applications in each state / status category.
      parameters:
        - in: query
          name: userId
          schema:
            type: string
      responses:
        '500':
          description: 'Error getting the total number of applications in each state / status category'
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ServerErrors'
        '400':
          description: 'Error the total number of applications in each state / status category - No User ID specified.'
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ClientErrors'
        '200':
          description: 'The object containing the metadata information'
          content:
            application/json:
              schema:
                type: object
                properties:
                  APPROVED:
                    type: number
                    nullable: false
                  CLOSED:
                    type: number
                    nullable: false
                  DAC_REVIEW:
                    type: number
                    nullable: false
                  DAC_REVISIONS_REQUESTED:
                    type: number
                    nullable: false
                  DRAFT:
                    type: number
                    nullable: false
                  INSTITUTIONAL_REP_REVIEW:
                    type: number
                    nullable: false
                  REJECTED:
                    type: number
                    nullable: false
                  INSTITUTIONAL_REP_REVISION_REQUESTED:
                    type: number
                    nullable: false
                  REVOKED:
                    type: number
                    nullable: false
                  TOTAL:
                    type: number
                    nullable: false

  /applications/create:
    post:
      tags:
        - Applications
      summary: Create a new application.
      requestBody:
        description: The body containing information about the requesting user.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/requests/ApplicationCreation'
      responses:
        '500':
          description: 'Error creating application'
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ServerErrors'
        '400':
          description: 'Error creating application - No User ID specified.'
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ClientErrors'
        '201':
          description: 'Application created'
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Applications'

  /applications/edit:
    post:
      tags:
        - Applications
      summary: Edit application details
      requestBody:
        description: Changes made to an Application record
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/requests/ApplicationUpdates'
      responses:
        '500':
          description: 'Error editing application'
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ServerErrors'
        '400':
          description: 'Error editing application - Application not found'
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ClientErrors'
        '200':
          description: 'Application updated'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationRecord'

  /applications/approve:
    post:
      tags:
        - Applications
      summary: Approve an application.
      requestBody:
        description: Request body containing approval details.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/requests/ApproveApplication'
      responses:
        '200':
          description: Application successfully approved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Applications'
        '400':
          description: Invalid request - missing or invalid approval data.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ClientErrors'
        '404':
          description: Application not found.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ClientErrors'
        '500':
          description: Server error - Unable to process approval.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ServerErrors'

  /applications/reject:
    post:
      tags:
        - Applications
      summary: Reject an application
      description: Allows DAC to reject an application. Rejected applications cannot be reopened or changed.
      requestBody:
        description: Request body containing rejection details.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/requests/RejectApplication'
      responses:
        '500':
          description: 'Cannot reject application by ID'
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ServerErrors'
        '404':
          description: 'Invalid request or rejection not allowed'
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ClientErrors'
        '200':
          description: 'Application successfully rejected'
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ApplicationResponse'

  /applications/{applicationId}/submit-revision:
    post:
      tags:
        - Applications
      summary: Submit revisions for an application
      description: Allows applicants to submit requested revisions for DAC or Rep review.
      parameters:
        - name: applicationId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '500':
          description: 'Cannot reject application by ID'
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ServerErrors'
        '400':
          description: 'Error submitting revision. Request validation failed.'
          content:
            application/json:
              schema:
                $ref: '#/components/responses/RequestValidationError'
        '404':
          description: 'Invalid request or submit revision not allowed'
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ClientErrors'
        '200':
          description: 'Application successfully submitted for revision'
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ApplicationResponse'

  /signature/{applicationId}:
    get:
      tags:
        - Signature
      summary: Get the signatures associated with an application.
      parameters:
        - name: applicationId
          in: path
          description: The ID of the application you wish to retrieve the signature from.
          required: true
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: Successfully retrieved signature details from an application record. Note that these may be `null`, depending on if the application has been signed or not.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/SignatureRecord'
        '400':
          description: Will occur when not provided a valid `applicationId`, either a negative number, or not a number at all.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/responses/RequestValidationError'
                  - $ref: '#/components/responses/ClientErrors'
        '404':
          description: Application not found.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ClientErrors'
        '500':
          description: Something went wrong while processing your request.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ServerErrors'
    delete:
      tags:
        - Signature
      summary: Delete signatures associated with an application.
      parameters:
        - name: applicationId
          in: path
          description: The ID of the application you wish to retrieve the signature from.
          required: true
          schema:
            type: integer
            minimum: 1
        - in: query
          name: signee
          schema:
            type: string
            enum: [INSTITUTIONAL_REP, APPLICANT]
          description: Which signature to delete
          required: true
      responses:
        '204':
          description: Successfully deleted the signature requested. This will always result in a `No Content` response.
        '400':
          description: Will occur when not provided a valid `applicationId`, either a negative number, or not a number at all or invalid `signee`.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/responses/RequestValidationError'
                  - $ref: '#/components/responses/ClientErrors'
        '404':
          description: Application not found.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ClientErrors'
        '500':
          description: Something went wrong while processing your request.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ServerErrors'

  /signature/sign:
    post:
      tags:
        - Signature
      summary: Sign an application with a signature.
      requestBody:
        description: The ID of the application you wish to add the signature to, the signature (encoded in base64) and the time the signature took place.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/requests/SignatureSign'
      responses:
        '200':
          description: Application has been successfully signed. It will return the same data to you as what you sent in with a status `200 OK`.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/SignatureSigned'
        '400':
          description: Body parameters incorrect / validation failed. Likely due to missing params, or a non-base64 string.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/responses/RequestValidationError'
                  - $ref: '#/components/responses/ClientErrors'
        '404':
          description: Application not found.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ClientErrors'
        '500':
          description: Something went wrong while processing your request.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ServerErrors'

  /collaborators/create:
    post:
      tags:
        - Collaborators
      summary: Create new Collaborators for an application.
      requestBody:
        description: The body containing information about the requesting user.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                applicationId:
                  type: number
                  description: ID of the related Application record that new Collaborators are associated with
                userId:
                  type: string
                  description: Temporary, Applicant's User Id, required for authorization
                collaborators:
                  $ref: '#/components/requests/CreateCollaborators'
      responses:
        '500':
          description: 'Error creating collaborators'
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ServerErrors'
        '400':
          description: 'Error creating Collaborators'
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ClientErrors'
        '201':
          description: 'Collaborators created'
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/responses/CollaboratorsListResponse'

  /collaborators/{applicationId}:
    get:
      tags:
        - Collaborators
      summary: List all Collaborators for an application.
      parameters:
        - in: path
          name: applicationId
          schema:
            type: number
          description: Id of application to find related collaborators
          required: true
      responses:
        '201':
          description: 'Collaborators retrieved'
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/responses/CollaboratorsListResponse'
        '500':
          description: 'Error listing collaborators'
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ServerErrors'
        '400':
          description: 'Error listing Collaborators'
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ClientErrors'

  /collaborators/update:
    post:
      tags:
        - Collaborators
      summary: Edit existing Collaborator records
      requestBody:
        description: The body containing information about the requesting user.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                applicationId:
                  type: number
                  description: ID of the related Application record that Collaborator records are associated with
                userId:
                  type: string
                  description: Temporary, Applicant's User Id, required for authorization
                collaboratorUpdates:
                  $ref: '#/components/requests/UpdatedCollaborators'
      responses:
        '201':
          description: 'Collaborators updated'
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/responses/CollaboratorsListResponse'
        '500':
          description: 'Error updating collaborators'
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ServerErrors'
        '400':
          description: 'Error updating Collaborators'
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ClientErrors'

  /collaborators/{applicationId}/{collaboratorId}:
    delete:
      tags:
        - Collaborators
      summary: Create new Collaborators for an application.
      parameters:
        - in: path
          name: applicationId
          schema:
            type: integer
          required: true
          description: Numeric ID of the relevant application to get
        - in: path
          name: collaboratorId
          schema:
            type: integer
          required: true
          description: Numeric ID of the Collaborator to delete
      responses:
        '201':
          description: 'Collaborator deleted'
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/responses/CollaboratorsListResponse'
        '500':
          description: 'Error deleting collaborators'
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ServerErrors'
        '400':
          description: 'Error deleting Collaborators. Request validation failed.'
          content:
            application/json:
              schema:
                $ref: '#/components/responses/RequestValidationError'

  /applications/request-revisions:
    post:
      tags:
        - Applications
      summary: 'Request revisions for an application'
      description: 'Allows a rep to request revisions for an application, including approval status and comments on various sections.'
      operationId: 'requestRevisions'
      requestBody:
        description: Request body containing revision request details.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/requests/RequestRevisions'
      responses:
        '200':
          description: 'Revisions request successfully processed'
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: 'Indicates if the revision request was successful.'
                  updatedApplication:
                    allOf:
                      - description: 'Details of the updated application after revisions.'
                      - $ref: '#/components/responses/ApplicationResponse'
        '400':
          description: 'Error in requesting revisions. Invalid input, missing required fields.'
        '500':
          description: 'Error in requesting revisions'

  /file/ethics/{applicationId}:
    post:
      tags:
        - File
      summary: Upload new file or replace old file
      parameters:
        - in: path
          name: applicationId
          schema:
            type: integer
          required: true
          description: Numeric ID of the associated application upload
      consumes:
        - multipart/form-data
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: 'File uploaded'
          content:
            application/json:
              schema:
                type: object
        '500':
          description: 'Error uploading file to database'
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ServerErrors'
        '400':
          description: 'Error uploading file. File must be less than 5mb and only 1 file can be uploaded.'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/responses/RequestValidationError'
                  - $ref: '#/components/responses/ClientErrors'

  /file/{fileId}:
    delete:
      tags:
        - File
      summary: Delete Upload By file id
      parameters:
        - in: path
          name: fileId
          schema:
            type: integer
          required: true
          description: Numeric ID of the associated fileId upload
      responses:
        '200':
          description: 'File deleted'
          content:
            application/json:
              schema:
                type: object
        '500':
          description: 'Error deleting file in database'
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ServerErrors'
        '400':
          description: 'Invalid fileId.'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/responses/RequestValidationError'
                  - $ref: '#/components/responses/ClientErrors'
    get:
      tags:
        - File
      summary: Get file By File id
      parameters:
        - in: path
          name: fileId
          schema:
            type: integer
          required: true
          description: Numeric ID of the associated fileId upload
      responses:
        '200':
          description: 'File retrieved'
          content:
            application/json:
              schema:
                type: object
        '500':
          description: 'Error retrieved file in database'
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ServerErrors'
        '400':
          description: 'Invalid fileId.'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/responses/RequestValidationError'
                  - $ref: '#/components/responses/ClientErrors'

components:
  schemas:
    ApplicationWithApplicantInfo:
      type: object
      properties:
        id:
          type: number
          description: The unique ID of the application in the database.
        user_id:
          type: string
          description: The user ID associated with the application.
        state:
          type: string
          enum:
            [
              DRAFT,
              INSTITUTIONAL_REP_REVIEW,
              DAC_REVIEW,
              DAC_REVISIONS_REQUESTED,
              INSTITUTIONAL_REP_REVISION_REQUESTED,
              REJECTED,
              APPROVED,
              CLOSED,
              REVOKED,
            ]
          description: The current state that the application is in.
        createdAt:
          type: string
          format: date-time
          description: When the application was created
        approvedAt:
          type: string
          format: date-time
          nullable: true
          description: When the application was approved. Can be NULL.
        updatedAt:
          type: string
          format: date-time
          nullable: true
          description: When the application was updated. Can be NULL.
        expiresAt:
          type: string
          format: date-time
          nullable: true
          description: When the application expires. Can be NULL.
        contents:
          type: object
          description: Information about the applicant who applied in the application.
          properties:
            createdAt:
              type: string
              format: date-time
              description: When the application contents record was created
              nullable: false
            firstName:
              type: string
              nullable: true
              description: The first name of the applicant. Can be NULL.
            lastName:
              type: string
              nullable: true
              description: The last name of the applicant. Can be NULL.
            email:
              type: string
              nullable: true
              description: The email address of the applicant. Can be NULL.
            country:
              type: string
              nullable: true
              description: The country of the applicant's associated institution. Can be NULL.
            institution:
              type: string
              nullable: true
              description: The applicant's associated institution. Can be NULL.
    Applications:
      type: object
      properties:
        id:
          type: number
          description: The unique ID of the application in the database.
        user_id:
          type: string
          description: The user ID associated with the application.
        state:
          type: string
          enum:
            [
              DRAFT,
              INSTITUTIONAL_REP_REVIEW,
              DAC_REVIEW,
              INSTITUTIONAL_REP_REVISION_REQUESTED,
              DAC_REVISIONS_REQUESTED,
              REJECTED,
              APPROVED,
              CLOSED,
              REVOKED,
            ]
          description: The current state that the application is in.
        createdAt:
          type: string
          format: date-time
          description: When the application was created
        approvedAt:
          type: string
          format: date-time
          nullable: true
          description: When the application was approved. Can be NULL.
        updatedAt:
          type: string
          format: date-time
          nullable: true
          description: When the application was updated. Can be NULL.
        expiresAt:
          type: string
          format: date-time
          nullable: true
          description: When the application expires. Can be NULL.
        content:
          type: number
          description: The ID of the record containing the content of the application.

    PagingMetadata:
      type: object
      description: Information regarding what current page of results.
      properties:
        totalRecords:
          type: number
          description: The total number of records in the current result set.
        page:
          type: number
          description: The current page of results, starts from 0. Default is 0.
        pageSize:
          type: number
          description: The current page size. Default is 20.

    ApplicationContents:
      type: object
      description: Complete Application details
      properties:
        applicant_first_name:
          type: string
          description: Applicant's first name
        applicant_middle_name:
          type: string
          description: Applicant's middle name
        applicant_last_name:
          type: string
          description: Applicant's last name
        applicant_title:
          type: string
          description: Applicant's formal title
        applicant_suffix:
          type: string
          description: Applicant's formal suffix
        applicant_position_title:
          type: string
          description: Applicant's professional title
        applicant_primary_affiliation:
          type: string
          description: Applicant's institution
        applicant_institutional_email:
          type: string
          description: Applicant's email
        applicant_profile_url:
          type: string
          description: Applicant's profile URL
        # Institutional Rep
        institutional_rep_title:
          type: string
          description: Institutional representative's professional title
        institutional_rep_first_name:
          type: string
          description: Institutional representative's first name
        institutional_rep_middle_name:
          type: string
          description: Institutional representative's middle name
        institutional_rep_last_name:
          type: string
          description: Institutional representative's last name
        institutional_rep_suffix:
          type: string
          description: Institutional representative's formal suffix
        institutional_rep_primary_affiliation:
          type: string
          description: Institutional representative's affiliation
        institutional_rep_email:
          type: string
          description: Institutional representative's email
        institutional_rep_profile_url:
          type: string
          description: Institutional representative's profile URL
        institutional_rep_position_title:
          type: string
          description: Institutional representative's professional title
        # Institution
        institution_country:
          type: string
          description: Address of Institution - Country
        institution_state:
          type: string
          description: Address of Institution - State
        institution_city:
          type: string
          description: Address of Institution - City
        institution_street_address:
          type: string
          description: Address of Institution - street name and number
        institution_postal_code:
          type: string
          description: Address of Institution - postal code
        institution_building:
          type: string
          description: Address of Institution - specific building name if required
        # Project
        project_title:
          type: string
          description: Name of project
        project_website:
          type: string
          description: URL of project website
        project_background:
          type: string
          description: Brief description of project
        project_methodology:
          type: string
          description: Description of scientific approach used in the project
        project_aims:
          type: string
          description: Goals for the project
        project_summary:
          type: string
          description: In depth text summary of project
        project_publication_urls:
          type: array
          description: URLs of publications related to the project
        # Studies
        requested_studies:
          type: array
          description: List of studies

    ApplicationRecord:
      type: object
      description: Merged Application & ApplicationContents record
      $ref: '#/components/schemas/Applications'
      properties:
        contents:
          type: object
          $ref: '#/components/schemas/ApplicationContents'

    Collaborators:
      type: object
      properties:
        id:
          type: number
          description: The unique ID of the collaborator in the database.
        application_id:
          type: number
          description: The Application ID associated with the Collaborator.
        first_name:
          type: string
          description: The collaborator's first name
        middle_name:
          type: string
          description: The collaborator's middle name
        last_name:
          type: string
          description: The collaborator's last name
        suffix:
          type: string
          description: The collaborator's additional name suffix
        position_title:
          type: string
          description: The collaborator's job title
        institutional_email:
          type: string
          description: The collaborator's contact email

    SignatureRecord:
      type: object
      properties:
        applicationId:
          type: number
          description: The ID of the application you want to add/modify the signature on.
        applicantSignature:
          pattern: '^(?:data\:image\/png\;base64,(\s+)?){1}([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$'
          type: string
          description: |
            The Base64 encoded PNG image containing the signature of the Applicant.
          nullable: true
        applicantSignedAt:
          type: string
          format: date-time
          description: The time the applicant signed at.
          nullable: true
        institutionalRepSignature:
          pattern: '^(?:data\:image\/png\;base64,(\s+)?){1}([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$'
          type: string
          description: |
            The Base64 encoded PNG image containing the signature of the Applicant.
          nullable: true
        institutionalRepSignedAt:
          type: string
          format: date-time
          description: The time the applicant signed at.
          nullable: true

  requests:
    ApplicationCreation:
      type: object
      required:
        - userId
      properties:
        userId:
          type: string
          description: The user ID belonging to the currently signed in user.

    ApplicationUpdates:
      type: object
      required:
        - id
        - update
      properties:
        id:
          type: number
          description: The id of the Application
        update:
          description: Changes to make to the application
          type: object
          $ref: '#/components/schemas/ApplicationContents'

    ApproveApplication:
      type: object
      required:
        - applicationId
      properties:
        applicationId:
          description: The id of the Application
          type: number

    RejectApplication:
      type: object
      required:
        - applicationId
      properties:
        applicationId:
          description: The id of the Application
          type: number

    SignatureSign:
      type: object
      description: The contents of the signature details in an application.
      properties:
        applicationId:
          type: number
          description: The ID of the application you want to add/modify the signature on.
        signature:
          pattern: '^(?:data\:image\/png\;base64,(\s+)?){1}([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$'
          type: string
          description: |
            The Base64 encoded PNG image containing the signature of the Applicant or Institutional Representative.
        signee:
          type: string
          enum: [APPLICANT, INSTITUTIONAL_REP]
          description: Whether the signature is being performed by an applicant or a Institutional Representative.

    CreateCollaborators:
      type: array
      description: Array of new Collaborators to create
      items:
        $ref: '#/components/requests/NewCollaborator'

    NewCollaborator:
      type: object
      required:
        - collaboratorFirstName
        - collaboratorLastName
        - collaboratorPositionTitle
        - collaboratorInstitutionalEmail
      properties:
        collaboratorFirstName:
          type: string
          description: The collaborator's first name
        collaboratorMiddleName:
          type: string
          description: The collaborator's middle name
        collaboratorLastName:
          type: string
          description: The collaborator's last name
        collaboratorSuffix:
          type: string
          description: The collaborator's additional name suffix
        collaboratorPositionTitle:
          type: string
          description: The collaborator's job title
        collaboratorInstitutionalEmail:
          type: string
          description: The collaborator's contact email

    UpdatedCollaborators:
      type: object
      required:
        - id
      properties:
        id:
          type: number
          description: ID of the Collaborator record to update
        collaboratorFirstName:
          type: string
          description: The collaborator's first name
        collaboratorMiddleName:
          type: string
          description: The collaborator's middle name
        collaboratorLastName:
          type: string
          description: The collaborator's last name
        collaboratorSuffix:
          type: string
          description: The collaborator's additional name suffix
        collaboratorPositionTitle:
          type: string
          description: The collaborator's job title
        collaboratorInstitutionalEmail:
          type: string
          description: The collaborator's contact email

    DeleteCollaborators:
      type: object
      required:
        - applicationId
        - userId
        - collaboratorId
      properties:
        applicationId:
          type: number
          description: The id of the relevant Application record
        userId:
          type: string
          description: The user ID belonging to the currently signed in user.
        collaboratorId:
          type: number
          description: The ID of the Collaborator to delete.

    RequestRevisions:
      type: object
      required:
        - applicationId
        - role
        - revisionData
      properties:
        applicationId:
          type: integer
          description: 'ID of the application for which revisions are being requested.'
          example: 12345
        role:
          type: string
          description: 'Role of the reviewer'
          example: DAC_MEMBER
        revisionData:
          type: object
          description: 'Data containing approval status and notes for various sections of the application.'
          properties:
            applicantApproved:
              type: boolean
              description: 'Approval status for the applicant information section.'
              example: true
            applicantNotes:
              type: string
              description: 'Notes related to the applicant information section.'
              example: 'Applicant needs to update personal details.'
            institutionRepApproved:
              type: boolean
              description: 'Approval status for the institutional representative section.'
              example: false
            institutionRepNotes:
              type: string
              description: 'Notes related to the institutional representative section.'
              example: 'Institution rep has missing documents.'
            collaboratorsApproved:
              type: boolean
              description: 'Approval status for the collaborators section.'
              example: true
            collaboratorsNotes:
              type: string
              description: 'Notes related to the collaborators section.'
              example: 'All collaborators have provided necessary details.'
            projectApproved:
              type: boolean
              description: 'Approval status for the project information section.'
              example: true
            projectNotes:
              type: string
              description: 'Notes related to the project information section.'
              example: 'Project details are complete.'
            requestedStudiesApproved:
              type: boolean
              description: 'Approval status for the requested study section.'
              example: true
            requestedStudiesNotes:
              type: string
              description: 'Notes related to the requested study section.'
              example: 'Requested studies are well defined.'
            ethicsApproved:
              type: boolean
              description: 'Approval status for the ethics section.'
              example: true
            ethicsNotes:
              type: string
              description: 'Notes related to the ethics section.'
              example: 'Ethics review is pending.'
            comments:
              type: string
              description: 'Additional comments'

  responses:
    ApplicationResponse:
      type: object
      properties:
        id:
          type: number
          description: The unique ID of the application in the database.
        userId:
          type: string
          description: The user ID associated with the application.
        state:
          type: string
          enum:
            [
              DRAFT,
              INSTITUTIONAL_REP_REVIEW,
              DAC_REVIEW,
              INSTITUTIONAL_REP_REVISION_REQUESTED,
              DAC_REVISIONS_REQUESTED,
              REJECTED,
              APPROVED,
              CLOSED,
              REVOKED,
            ]
          description: The current state that the application is in.
        createdAt:
          type: string
          format: date-time
          description: When the application was created
        approvedAt:
          type: string
          format: date-time
          nullable: true
          description: When the application was approved. Can be NULL.
        updatedAt:
          type: string
          format: date-time
          nullable: true
          description: When the application was updated. Can be NULL.
        expiresAt:
          type: string
          format: date-time
          nullable: true
          description: When the application expires. Can be NULL.
        content:
          type: object
          description: The Application Contents returned to the UI
          $ref: '#/components/responses/ApplicationContentsResponse'

    ApplicationContentsResponse:
      type: object
      description: Complete Application details
      properties:
        applicantFirstName:
          type: string
          description: Applicant's first name
        applicantMiddleName:
          type: string
          description: Applicant's middle name
        applicantLastName:
          type: string
          description: Applicant's last name
        applicantTitle:
          type: string
          description: Applicant's formal title
        applicantSuffix:
          type: string
          description: Applicant's formal suffix
        applicantPositionTitle:
          type: string
          description: Applicant's professional title
        applicantPrimaryAffiliation:
          type: string
          description: Applicant's institution
        applicantInstitutionalEmail:
          type: string
          description: Applicant's email
        applicantProfileUrl:
          type: string
          description: Applicant's profile URL
        # Institutional Rep
        institutionalRepTitle:
          type: string
          description: Institutional representative's professional title
        institutionalRepFirstName:
          type: string
          description: Institutional representative's first name
        institutionalRepMiddleName:
          type: string
          description: Institutional representative's middle name
        institutionalRepLastName:
          type: string
          description: Institutional representative's last name
        institutionalRepSuffix:
          type: string
          description: Institutional representative's formal suffix
        institutionalRepPrimaryAffiliation:
          type: string
          description: Institutional representative's affiliation
        institutionalRepEmail:
          type: string
          description: Institutional representative's email
        institutionalRepProfileUrl:
          type: string
          description: Institutional representative's profile URL
        institutionalRepPositionTitle:
          type: string
          description: Institutional representative's professional title
        # Institution
        institutionCountry:
          type: string
          description: Address of Institution - Country
        institutionState:
          type: string
          description: Address of Institution - State
        institutionCity:
          type: string
          description: Address of Institution - City
        institutionStreetAddress:
          type: string
          description: Address of Institution - street name and number
        institutionPostalCode:
          type: string
          description: Address of Institution - postal code
        institutionBuilding:
          type: string
          description: Address of Institution - specific building name if required
        # Project
        projectTitle:
          type: string
          description: Name of project
        projectWebsite:
          type: string
          description: URL of project website
        projectBackground:
          type: string
          description: Brief description of project
        projectMethodology:
          type: string
          description: Description of scientific approach used in the project
        projectAims:
          type: string
          description: Goals for the project
        projectSummary:
          type: string
          description: In depth text summary of project
        projectPublicationUrls:
          type: array
          description: URLs of publications related to the project
        # Studies
        requested_studies:
          type: array
          description: List of studies

    ClientErrors:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: General description of error with parameters and context

    CollaboratorsListResponse:
      type: array
      description: Array of Collaborator records
      items:
        $ref: '#/components/schemas/Collaborators'

    ServerErrors:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: General description of error with parameters and context
        errors:
          description: Detailed error data thrown by code failure
          type: string

    SignatureRecord:
      type: object
      description: The contents of the signature details contained within an application record.
      properties:
        applicationId:
          type: number
          description: The ID of the application you want to add/modify the signature on.
        applicantSignature:
          pattern: '^(?:data\:image\/png\;base64,(\s+)?){1}([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$'
          type: string
          description: |
            The Base64 encoded PNG image containing the signature of the Applicant.
          nullable: true
        applicantSignedAt:
          type: string
          format: date-time
          description: The time the applicant signed at.
          nullable: true
        institutionalRepSignature:
          pattern: '^(?:data\:image\/png\;base64,(\s+)?){1}([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$'
          type: string
          description: |
            The Base64 encoded PNG image containing the signature of the Applicant.
          nullable: true
        institutionalRepSignedAt:
          type: string
          format: date-time
          description: The time the applicant signed at.
          nullable: true

    SignatureSigned:
      type: object
      description: The contents of the signature details in an application.
      properties:
        id:
          type: number
          description: The ID of the application that you modified the signature on.
        signature:
          pattern: '^(?:data\:image\/png\;base64,(\s+)?){1}([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$'
          type: string
          description: |
            The Base64 encoded PNG image containing the signature of the Applicant or Institutional Representative.
        signedAt:
          type: string
          format: date-time
          description: The the signature was signed.

    RequestValidationError:
      type: object
      required:
        - message
        - error
        - details
      properties:
        error:
          type: string
          description: Error code, usually "RequestValidationError"
        message:
          type: string
          description: General description of error with parameters and context
        details:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
                description: The validation error type
              expected:
                type: string
                description: The expected property.
              received:
                type: string
                description: The property that was received in the request
              path:
                type: array
                items:
                  type: string
                  description: The path of the object where validation failed.
              message:
                type: string
                description: A plain text error message describing why the validation failed.
