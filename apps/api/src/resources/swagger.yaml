# Copyright (c) 2024 The Ontario Institute for Cancer Research. All rights reserved
#
# This program and the accompanying materials are made available under the terms of
# the GNU Affero General Public License v3.0. You should have received a copy of the
# GNU Affero General Public License along with this program.
#  If not, see <http://www.gnu.org/licenses/>.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
# SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
# TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER
# IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

openapi: 3.0.0
info:
  title: PCGL DACO API
  version: 1.0.0
paths:
  /health:
    get:
      tags:
        - Health
      summary: get status of app and various app components
      responses:
        '500':
          description: 'app is not fully healthy'
        '200':
          description: 'all components reporting healthy status'
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: string
                  health:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                        statusText:
                          type: string

  /applications:
    get:
      tags:
        - Applications
      summary: Get All Users Applications
      parameters:
        - in: query
          name: userId
          schema:
            type: string
          description: Retrieve application items belonging to userId
          required: true
        - in: query
          name: state
          schema:
            type: string
          description: |
            Retrieve specific application items in a certain State. This may be an array to to get multiple application types. The states that may be requested, may be the following enum values: `["DRAFT", "INSTITUTIONAL_REP_REVIEW"," DAC_REVIEW", "DAC_REVISIONS_REQUESTED", "REJECTED", "APPROVED", "CLOSED", "REVOKED"]`.
            <br/>
            <br/>
            **For Example:** `["APPROVED", "REJECTED"]` to get both approved and rejected applications.
            <br/>
            <br/>
            *Note:* These values *are* case sensitive.
        - in: query
          name: sort
          schema:
            type: string
          description: |
            Sort application items. Sorting application items takes in a JSON representation of an array and object combination.  This contains the column you'd like to sort by (id, user_id, state, created_at, approved_at, expires_at) and the direction (asc, desc).
            <br/>
            <br/>
            **For Example:** `[{"direction":"desc","column":"id"}]`. 
            <br/>
            <br/>
            *Note:* you may sort by multiple columns, just keep adding objects into the array.
        - in: query
          name: page
          schema:
            type: number
            minimum: 0
          description: Retrieve specific page of application items. All page counts start from zero (0) and must be a positive number. If none is provided, the default is 0.
        - in: query
          name: pageSize
          schema:
            type: number
            minimum: 0
          description: Max number of application items per page. Must be a positive number. If the property isn't provided, the default is 20.
      responses:
        '500':
          description: 'Cannot return applications list'
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ServerErrors'
        '400':
          description: 'Occurs when no User ID is provided, or page and/or page size are negative values.'
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ClientErrors'
        '200':
          description: 'Applications retrieved'
          content:
            application/json:
              schema:
                type: object
                properties:
                  applications:
                    type: array
                    items:
                      $ref: '#/components/schemas/ApplicationWithApplicantInfo'
                  paging:
                    type: object
                    $ref: '#/components/schemas/PagingInformation'

  /applications/{applicationId}:
    get:
      tags:
        - Applications
      summary: Gets a application for a specified application ID.
      parameters:
        - in: path
          name: applicationId
          schema:
            type: string
          description: Retrieve a specific application with the specified application ID.
          required: true
      responses:
        '500':
          description: 'Cannot retrieve application by ID'
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ServerErrors'
        '404':
          description: 'Error retrieving application by ID - Application not found.'
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ClientErrors'
        '200':
          description: 'Application retrieved'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Applications'

  /applications/create:
    post:
      tags:
        - Applications
      summary: Create a new application.
      requestBody:
        description: The body containing information about the requesting user.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/requests/ApplicationCreation'
      responses:
        '500':
          description: 'Error creating application'
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ServerErrors'
        '400':
          description: 'Error creating application - No User ID specified.'
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ClientErrors'
        '201':
          description: 'Application created'
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Applications'

  /applications/edit:
    post:
      tags:
        - Applications
      summary: Edit application details
      requestBody:
        description: Changes made to an Application record
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/requests/ApplicationUpdates'
      responses:
        '500':
          description: 'Error editing application'
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ServerErrors'
        '400':
          description: 'Error editing application - Application not found'
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ClientErrors'
        '200':
          description: 'Application updated'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationRecord'

components:
  schemas:
    ApplicationWithApplicantInfo:
      type: object
      properties:
        id:
          type: number
          description: The unique ID of the application in the database.
        user_id:
          type: string
          description: The user ID associated with the application.
        state:
          type: string
          enum:
            [DRAFT, INSTITUTIONAL_REP_REVIEW, DAC_REVIEW, DAC_REVISIONS_REQUESTED, REJECTED, APPROVED, CLOSED, REVOKED]
          description: The current state that the application is in.
        createdAt:
          type: string
          format: date-time
          description: When the application was created
        approvedAt:
          type: string
          format: date-time
          nullable: true
          description: When the application was approved. Can be NULL.
        updatedAt:
          type: string
          format: date-time
          nullable: true
          description: When the application was updated. Can be NULL.
        expiresAt:
          type: string
          format: date-time
          nullable: true
          description: When the application expires. Can be NULL.
        applicantInformation:
          type: object
          description: Information about the applicant who applied in the application.
          properties:
            firstName:
              type: string
              nullable: true
              description: The first name of the applicant. Can be NULL.
            lastName:
              type: string
              nullable: true
              description: The last name of the applicant. Can be NULL.
            email:
              type: string
              nullable: true
              description: The email address of the applicant. Can be NULL.
            country:
              type: string
              nullable: true
              description: The country of the applicant's associated institution. Can be NULL.
            institution:
              type: string
              nullable: true
              description: The applicant's associated institution. Can be NULL.
    Applications:
      type: object
      properties:
        id:
          type: number
          description: The unique ID of the application in the database.
        user_id:
          type: string
          description: The user ID associated with the application.
        state:
          type: string
          enum:
            [DRAFT, INSTITUTIONAL_REP_REVIEW, DAC_REVIEW, DAC_REVISIONS_REQUESTED, REJECTED, APPROVED, CLOSED, REVOKED]
          description: The current state that the application is in.
        createdAt:
          type: string
          format: date-time
          description: When the application was created
        approvedAt:
          type: string
          format: date-time
          nullable: true
          description: When the application was approved. Can be NULL.
        updatedAt:
          type: string
          format: date-time
          nullable: true
          description: When the application was updated. Can be NULL.
        expiresAt:
          type: string
          format: date-time
          nullable: true
          description: When the application expires. Can be NULL.
        content:
          type: number
          description: The ID of the record containing the content of the application.

    PagingInformation:
      type: object
      description: Information regarding what current page of results.
      properties:
        totalRecords:
          type: number
          description: The total number of records in the current result set.
        page:
          type: number
          description: The current page of results, starts from 0. Default is 0.
        pageSize:
          type: number
          description: The current page size. Default is 20.

    ApplicationContents:
      type: object
      description: Complete Application details
      properties:
        applicant_first_name:
          type: string
          description: Applicant's first name
        applicant_middle_name:
          type: string
          description: Applicant's middle name
        applicant_last_name:
          type: string
          description: Applicant's last name
        applicant_title:
          type: string
          description: Applicant's formal title
        applicant_suffix:
          type: string
          description: Applicant's formal suffix
        applicant_position_title:
          type: string
          description: Applicant's professional title
        applicant_primary_affiliation:
          type: string
          description: Applicant's institution
        applicant_institutional_email:
          type: string
          description: Applicant's email
        applicant_profile_url:
          type: string
          description: Applicant's profile URL
        # Institutional Rep
        institutional_rep_title:
          type: string
          description: Institutional representative's professional title
        institutional_rep_first_name:
          type: string
          description: Institutional representative's first name
        institutional_rep_middle_name:
          type: string
          description: Institutional representative's middle name
        institutional_rep_last_name:
          type: string
          description: Institutional representative's last name
        institutional_rep_suffix:
          type: string
          description: Institutional representative's formal suffix
        institutional_rep_primary_affiliation:
          type: string
          description: Institutional representative's affiliation
        institutional_rep_email:
          type: string
          description: Institutional representative's email
        institutional_rep_profile_url:
          type: string
          description: Institutional representative's profile URL
        institutional_rep_position_title:
          type: string
          description: Institutional representative's professional title
        # Institution
        institution_country:
          type: string
          description: Address of Institution - Country
        institution_state:
          type: string
          description: Address of Institution - State
        institution_city:
          type: string
          description: Address of Institution - City
        institution_street_address:
          type: string
          description: Address of Institution - street name and number
        institution_postal_code:
          type: string
          description: Address of Institution - postal code
        institution_building:
          type: string
          description: Address of Institution - specific building name if required
        # Project
        project_title:
          type: string
          description: Name of project
        project_website:
          type: string
          description: URL of project website
        project_abstract:
          type: string
          description: Brief description of project
        project_methodology:
          type: string
          description: Description of scientific approach used in the project
        project_summary:
          type: string
          description: In depth text summary of project
        project_publication_urls:
          type: array
          description: URLs of publications related to the project
        # Studies
        requested_studies:
          type: array
          description: List of studies

    ApplicationRecord:
      type: object
      description: Merged Application & ApplicationContents record
      $ref: '#/components/schemas/Applications'
      properties:
        contents:
          type: object
          $ref: '#/components/schemas/ApplicationContents'

  requests:
    ApplicationCreation:
      type: object
      required:
        - userId
      properties:
        userId:
          type: string
          description: The user ID belonging to the currently signed in user.

    ApplicationUpdates:
      type: object
      required:
        - id
        - update
      properties:
        id:
          type: number
          description: The id of the Application
        update:
          description: Changes to make to the application
          type: object
          $ref: '#/components/schemas/ApplicationContents'

  responses:
    ClientErrors:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: General description of error with parameters and context

    ServerErrors:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: General description of error with parameters and context
        errors:
          description: Detailed error data thrown by code failure
          type: string
